@model Rinsen.Logging.Models.LoggerModel
@using Microsoft.AspNetCore.Hosting;
@using Newtonsoft.Json;
@using Newtonsoft.Json.Serialization;

@inject IHostingEnvironment HostingEnvironment
@{ 
    ViewBag.NgAppName = "app";
}

<div class="container-fluid" data-ng-controller="LoggerController as vm">
    <div class="col-xs-2">
        <div class="panel panel-primary">
            <div class="panel-heading">Log selection</div>
            <div class="panel-body">
                <div>
                    <button class=" btn btn-primary" data-ng-click="vm.show()">
                        Show
                    </button>
                </div>
                <div>
                    <h2>Environments</h2>
                    <div data-ng-repeat="logEnv in vm.options.logEnvironments track by logEnv.id">
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" data-ng-checked="logEnv.selected" data-ng-model="logEnv.selected" />
                                {{logEnv.name}}
                            </label>
                        </div>
                    </div>
                </div>
                <div>
                    <h2>Applications</h2>
                    <div data-ng-repeat="logApp in vm.options.logApplications track by logApp.id">
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" data-ng-checked="logApp.selected" data-ng-model="logApp.selected" />
                                {{logApp.name}}
                            </label>
                        </div>
                    </div>
                </div>
                <div>
                    <h2>Log levels</h2>
                    <div data-ng-repeat="logLevel in vm.options.logLevels track by logLevel.level">
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" data-ng-checked="logLevel.selected" data-ng-model="logLevel.selected" />
                                {{logLevel.name}}
                            </label>
                        </div>
                    </div>
                </div>
                <div>
                    <h2>Period</h2>
                    <div class="form-group">
                        <label for="from">From</label>
                        <input class="form-control" type="datetime-local" id="from" data-ng-model="vm.options.from" />
                    </div>
                    <div class="form-group">
                        <label for="to">To</label>
                        <input class="form-control" type="datetime-local" id="to" data-ng-model="vm.options.to" />
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xs-10">
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>SourceName</th>
                    <th>Message</th>
                    <th>ApplicationName</th>
                    <th>EnvironmentName</th>
                    <th>LogLevel</th>
                    <th>Timestamp</th>
                </tr>
            </thead>
            <tbody data-ng-repeat="log in vm.logs track by log.id">
                <tr>
                    <td>{{log.id}}</td>
                    <td style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 30em;">{{log.sourceName}}</td>
                    <td style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 50em;">{{log.message}}</td>
                    <td>{{log.applicationName}}</td>
                    <td>{{log.environmentName}}</td>
                    <td>{{log.logLevelName}}</td>
                    <td style="white-space: nowrap">{{log.timestamp | date:'yyyy-MM-dd HH:mm:ss'}}</td>
                </tr>
            </tbody>
        </table>
        <div data-ng-show="!vm.dataLoading && vm.logs.length === 0">
            <div class="alert alert-info" role="alert">No logs to display</div>
        </div>
        <div class="loader popup" data-ng-show="vm.dataLoading"></div>
    </div>
</div>
    <div id="selectionOptions" data-json="@JsonConvert.SerializeObject(Model.SelectionOptions, new JsonSerializerSettings { ContractResolver = new CamelCasePropertyNamesContractResolver() })"></div>

    @section Scripts
{
        @if (HostingEnvironment.IsDevelopment())
        {
            <script src="~/js/debug/app.js"></script>
            <script src="~/js/debug/Controllers/LoggerController.js"></script>
            <script src="~/js/debug/Services/LogSelectionOptionsService.js"></script>
        }
        else
        {
            <script src="~/js/debug/app.js"></script>
            <script src="~/js/debug/Controllers/LoggerController.js"></script>
            <script src="~/js/debug/Services/LogSelectionOptionsService.js"></script>
        }
    }
